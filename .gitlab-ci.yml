stages:
  - build
  - deploy

variables:
  DOCKER_HOST_PROD: "root@10.15.82.40"
  DOCKER_HOST_STG: "root@10.15.82.50"
  DOCKER_HOST_DEV: "root@10.15.82.85"
  DOCKER_IMAGE_NAME: "10.15.82.121:5000/$CI_PROJECT_NAME/$CI_COMMIT_BRANCH:latest"

build:
  stage: build
  before_script:
    - export http_proxy=http://10.15.3.20:80
    - export https_proxy=http://10.15.3.20:80
  script:
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME
    - docker rmi $DOCKER_IMAGE_NAME

deploy_prod:
  stage: deploy
  tags:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  when: on_success
  before_script:
    - export http_proxy=http://10.15.3.20:80
    - export https_proxy=http://10.15.3.20:80
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t ed25519 $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "docker pull $DOCKER_IMAGE_NAME"
    - ssh $SSH_USER@$VM_IPADDRESS "docker service rm $CI_PROJECT_NAME || true"
    - ssh $SSH_USER@$VM_IPADDRESS "docker service create -d --name $CI_PROJECT_NAME --replicas=3 --publish published=8908,target=8080,mode=host --limit-cpu 1 --limit-memory 4000m --restart-condition on-failure $DOCKER_IMAGE_NAME"

deploy_staging:
  stage: deploy
  tags:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  when: on_success
  before_script:
    - export http_proxy=http://10.15.3.20:80
    - export https_proxy=http://10.15.3.20:80
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t ed25519 $VM_IPADDRESS_STAGING >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS_STAGING "docker pull $DOCKER_IMAGE_NAME"
    - ssh $SSH_USER@$VM_IPADDRESS_STAGING "docker service rm $CI_PROJECT_NAME || true"
    - ssh $SSH_USER@$VM_IPADDRESS_STAGING "docker service create -d --name $CI_PROJECT_NAME --replicas=3 -p 8908:8080 --limit-cpu 1 --limit-memory 4000m --restart-condition on-failure $DOCKER_IMAGE_NAME"

deploy_dev:
  stage: deploy
  tags:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  when: on_success
  before_script:
    - export http_proxy=http://10.15.3.20:80
    - export https_proxy=http://10.15.3.20:80
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t ed25519 $VM_IPADDRESS_DEV >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS_DEV "docker pull $DOCKER_IMAGE_NAME"
    - ssh $SSH_USER@$VM_IPADDRESS_DEV "docker stop $CI_PROJECT_NAME || true && docker rm $CI_PROJECT_NAME || true"
    - ssh $SSH_USER@$VM_IPADDRESS_DEV "docker run -d --name $CI_PROJECT_NAME -p 8908:8080 --limit-cpu 1 --limit-memory 4000m --restart-condition on-failure $DOCKER_IMAGE_NAME"
